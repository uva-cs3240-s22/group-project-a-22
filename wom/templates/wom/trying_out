def search(request):
    template = "wom/search_results.html"
    post = Recipe.objects.all()
    # post = filter(request, q)['object_list']
    if request.method == 'GET':
        search = request.GET.get('q')
        if (not search or search.isspace() or search == ""):
            post = filter(request, post)
        else:
            search_keywords = search.split()
            q = reduce(operator.and_, (Q(title__icontains=kw)
                       for kw in search_keywords))
            post = post.filter(q)
            # post = filter(request, post.filter(q))['object_list']
    else:
        post = Recipe.objects.all()
    return render(request, template, {'object_list': post})


def filter(request, q):
    # q = Recipe.objects.all()
    message = ""
    filtered = False
    meal_type = request.GET.get('meal_type')
    course = request.GET.get('course')
    prep_time = request.GET.get('prep_time')
    cook_time = request.GET.get('cook_time')
    sort_by = request.GET.get('sort_by')

    if meal_type != '' and meal_type is not None:
        q = q.filter(meal_type__iexact=meal_type)
        filtered = True
    if course != '' and course is not None:
        q = q.filter(course__iexact=course)
        filtered = True
    if prep_time != '' and prep_time is not None:
        if prep_time == '1:00:01': 
            t = timedelta(hours=1)
            q = q.filter(preparation_time__gte=t)
            print('prep gte')
        else:
            times = prep_time.split(':')
            times = list(map(int, times))
            t = timedelta(hours=times[0], minutes=times[1], seconds=times[2])
            q = q.filter(preparation_time__lte=t)
            print('prep lte')
        filtered = True
    if cook_time != '' and cook_time is not None:
        if cook_time == '1:00:01':
            t = timedelta( hours=1)
            q = q.filter(cooking_time__gte=t)
        else: 
            times = cook_time.split(':')
            times = list(map(int, times))
            t = timedelta( hours=times[0], minutes=times[1], seconds=times[2] )
            q = q.filter(cooking_time__lte=t)
        filtered = True   
    if sort_by != '' and sort_by is not None:
        if sort_by == 'AZ':
            print('az')
            q = q.order_by('title') #want to
        elif sort_by == 'Recent':
            print('recent')
            q = q.order_by('-pub_date')
        elif sort_by == 'Oldest':
            print('old')
            q = q.order_by('pub_date')
        filtered = True
    if filtered == False:
        print('not filtered')
        q = Recipe.objects.all() 

    return {'object_list': q, 'message': message}


                            <script type="text/javascript">
                            $(document).ready(function() {
                                $('#sort_by').val("{{ request.GET.sort_by }}")
                                $('#meal_type').val("{{ request.GET.meal_type }}")
                                $('#course').val("{{ request.GET.course }}")
                                $('#prep_time').val("{{ request.GET.prep_time }}")
                                $('#cook_time').val("{{ request.GET.cook_time }}")
                            })
                        </script>